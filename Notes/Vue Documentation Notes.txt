Introduction
************
- core library is focused on the view layer only
- easy to integrate with other libraries or projects
- capable of powering sophisticated single-page applications when used in combination with modern tooling
- Declarative Rendering
	- At the core of Vue.js is a system that enables declarative rendering of data to the DOM
	- double curly braces, initialized in Vue instance, makes data reactive
	- v-bind attribute is called a directive
		- v indicates they are provided by vue
		- they apply special reactive behavior to the rendered DOM
		- 'keep the elements title attribute up to date'
	- v-if - it's easy to toggle the presence of an element too
		- we can bind data to not only text and attributes, but also the structure of the DOM
	- there are quite a few other directives, for example v-for
	- v-on directive to attach event listeners that invoke methods on our Vue instances
	- Note that we update the state of the app without touching the DOM, all DOM manipulations are handled by Vue, and the code you write is focused on the underlying logic
	- v-model directive makes two-way binding between form input and app state a breeze
- Composing with Components
	- abstraction that allows us to build large-scale applications composed of small, self-contained, and often reusable components
	- In Vue, a component is a Vue instance with pre-defined options
	- Can embed a component in a parent component
	- Can also pass props from parent component to child
	- In a large application, it is necessary to divide the whole app into components to make development manageable
	
The Vue Instance
****************
- Every Vue application starts by creating a new Vue instance with the Vue function
- Vue's design was inspired by the MVVM pattern
- Data and Methods
	- When a Vue instance is created, it adds all the properties found in its data object to Vue's reactivity system
	- When the values of those properties change, the view will react, updating to match the new values
	- It should be noted that properties in data are only reactive if they existed when the instance was created
	- If you know you'll need a property later, but it starts out empty or non-existent, you'll need to set some initial value
	- in addition to data properties, Vue instances expose a number of useful instance properties and methods. Prefixed with $ to differentiate them from user-defined properties
- Instance Lifecycle Hooks
	- Vue instances run functions called lifecycle hooks, giving users the opportunity to add their own code at specific stages
	